@using BlazingNotes.Logic
@{
    var headline = Headline;
    if (headline.HasContent() && ShowNoteCount && Notes.Count > 0)
    {
        headline += $" â€” {Notes.Count}";
    }
}
<MudExpansionPanel Text="@headline"
                   Class="my-0 bg-appbar"
                   Expanded="InitiallyExpanded"
                   HideIcon="Headline.LacksContent()">
    @* ^ no headline - the card is probably the only one - hide icon and disable toggling *@

    <MudStack Row Wrap="Wrap.Wrap" Spacing="6">
        @if (Notes.HasContent())
        {
            foreach (var item in Notes)
            {
                <NoteCard @key="item.Id" Note="item" SearchQuery="@SearchQuery"/>
            }

            @AfterLastCardContent
        }
        else
        {
            <MudAlert Severity="Severity.Info" Variant="Variant.Outlined" Class="d-inline-block">
                @if (SearchQuery.HasValue && SearchQuery.Value.RequiredTerms.HasContent())
                {
                    @:No notes found
                }
                else
                {
                    @NoNotesText
                }
            </MudAlert>
        }

    </MudStack>

</MudExpansionPanel>

@code {
    [Parameter] [EditorRequired] public required ICollection<Note> Notes { get; set; }
    [Parameter] public BzSearchQuery? SearchQuery { get; set; }
    [Parameter] public string? NoNotesText { get; set; } = "Keine Notizen gefunden";
    [Parameter] public string? Headline { get; set; }
    [Parameter] public bool InitiallyExpanded { get; set; } = true;
    [Parameter] public bool ShowNoteCount { get; set; } = true;
    [Parameter] public RenderFragment? AfterLastCardContent { get; set; }
}