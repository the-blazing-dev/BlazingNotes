@inherits LayoutComponentBase

<MudThemeProvider @ref="@_mudThemeProvider"
                  Theme="_mudTheme"
                  @bind-IsDarkMode="@_isDarkMode"/>
<MudPopoverProvider/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar Elevation="1" ToolBarClass="pl-1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Primary" OnClick="DrawerToggle"/>
        <MudImage Src="_content/BlazingNotes.UI/img/logo.svg" Style="max-height: 100%" Class="py-2"/>
        <MudText Typo="Typo.h5" Class="ml-3" Color="Color.Primary">BlazingNotes</MudText>
        <MudSpacer/>
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu/>
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.False" Class="py-6">
            @Body
            <NoteCreateFab/>
        </MudContainer>
    </MudMainContent>
</MudLayout>

<CreateNoteDialog/>
<EditNoteDialog/>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    bool _drawerOpen = true;
    bool _isDarkMode;
    MudThemeProvider _mudThemeProvider = null!;

    readonly MudTheme _mudTheme = new()
    {
        PaletteLight = new PaletteLight
        {
            Primary = Colors.Blue.Default,
            PrimaryLighten = Colors.Blue.Lighten2,
            PrimaryDarken = Colors.Blue.Darken2,
            AppbarBackground = Colors.Gray.Lighten3,
            AppbarText = new PaletteLight().TextPrimary
        },
        PaletteDark = new PaletteDark
        {
            Primary = Colors.Blue.Default,
            PrimaryLighten = Colors.Blue.Lighten2,
            PrimaryDarken = Colors.Blue.Darken2
        },
        Typography = new Typography
        {
            Input = new Input
            {
                FontSize = "inherit"
            }
        }
    };

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _isDarkMode = await _mudThemeProvider.GetSystemPreference();
            StateHasChanged();
        }
    }

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

}