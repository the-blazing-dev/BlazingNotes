@inherits LayoutComponentBase

<MudThemeProvider @ref="@_mudThemeProvider"
                  Theme="_mudTheme"
                  @bind-IsDarkMode="@_isDarkMode"/>
<MudPopoverProvider/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@(e => DrawerToggle())"/>
        <MudText Typo="Typo.h5" Class="ml-3">BlazingNotes</MudText>
        <MudSpacer/>
        <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End"/>
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu/>
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.False" Class="py-6">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    bool _drawerOpen = true;
    bool _isDarkMode;
    MudThemeProvider _mudThemeProvider = null!;

    readonly MudTheme _mudTheme = new()
    {
        PaletteLight = new PaletteLight
        {
            Primary = Colors.Blue.Default,
            PrimaryLighten = Colors.Blue.Lighten2,
            PrimaryDarken = Colors.Blue.Darken2
        },
        PaletteDark = new PaletteDark
        {
            Primary = Colors.Blue.Default,
            PrimaryLighten = Colors.Blue.Lighten2,
            PrimaryDarken = Colors.Blue.Darken2
        }
    };

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _isDarkMode = await _mudThemeProvider.GetSystemPreference();
            StateHasChanged();
        }
    }

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

}